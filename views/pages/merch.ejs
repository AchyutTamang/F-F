<%- contentFor('body') %>

<div class="container mx-auto px-4 py-8">
  <h1 class="text-3xl font-bold mb-8">Our Merchandise</h1>

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    <% merchItems.forEach(item => { %>
    <div class="bg-white rounded-lg shadow-md overflow-hidden">
      <img
        src="<%= item.image %>"
        alt="<%= item.name %>"
        class="w-full h-48 object-cover"
      />
      <div class="p-4">
        <h3 class="text-xl font-semibold mb-2"><%= item.name %></h3>
        <p class="text-gray-600 mb-4"><%= item.description %></p>
        <div class="flex justify-between items-center">
          <span class="text-lg font-bold">â‚¹<%= item.price %></span>
        </div>
        <button
          onclick="addToCart({
                    id: '<%= item._id %>',
                    name: '<%= item.name %>',
                    price: '<%= item.price %>',
                    image: '<%= item.image %>',
                    quantity: 1
                })"
          class="w-full bg-primary hover:bg-primary/90 text-white py-2 px-4 rounded-md transition-colors duration-300 flex items-center justify-center gap-2"
        >
          <i class="fas fa-shopping-cart"></i>
          Add to Cart
        </button>
      </div>
    </div>
    <% }) %>
  </div>
</div>

<script>
  function addToCart(item) {
    let cart = JSON.parse(localStorage.getItem("cart") || "[]");
    const existingItem = cart.find((i) => i.id === item.id);

    if (existingItem) {
      existingItem.quantity += 1;
    } else {
      cart.push(item);
    }

    localStorage.setItem("cart", JSON.stringify(cart));
    updateCartCount();
    showAddToCartToast(item.name);
  }
  function updateCartCount() {
    // Use the global updateCartCount function defined in head.ejs
    const cart = JSON.parse(localStorage.getItem("cart") || "[]");
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    const cartCount = document.getElementById("cart-count");
    const mobileCartCount = document.getElementById("mobile-cart-count");
    if (cartCount) {
      cartCount.textContent = totalItems;
      cartCount.style.display = totalItems > 0 ? "flex" : "none";
    }
    if (mobileCartCount) {
      mobileCartCount.textContent = totalItems;
      mobileCartCount.style.display = totalItems > 0 ? "flex" : "none";
    }
  }
  function showAddToCartToast(itemName) {
    // Create toast element
    const toast = document.createElement("div");
    toast.className =
      "fixed bottom-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg transform translate-y-0 opacity-100 transition-all duration-300 z-50";
    toast.textContent = `${itemName} added to cart!`;

    document.body.appendChild(toast);

    // Remove toast after 3 seconds
    setTimeout(() => {
      toast.classList.add("opacity-0", "translate-y-2");
      setTimeout(() => toast.remove(), 300);
    }, 3000);
  }
</script>
