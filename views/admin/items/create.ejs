<div class="min-h-screen bg-gray-100 pb-12">
  <!-- Header -->
  <header class="bg-white shadow">
    <div class="max-w-7xl mx-auto py-6 px-4">
      <div class="flex justify-between items-center">
        <h1 class="text-3xl font-bold text-gray-900">Add New Item</h1>
        <a
          href="/admin/dashboard"
          class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600"
        >
          Back to Dashboard
        </a>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <main class="max-w-3xl mx-auto mt-8">
    <div class="bg-white shadow rounded-lg p-8">
      <% if (locals.error) { %>
      <div class="mb-4 bg-red-50 text-red-600 p-4 rounded-md"><%= error %></div>
      <% } %>

      <form action="/admin/items" method="POST" enctype="multipart/form-data">
        <!-- Name -->
        <div class="mb-6">
          <label for="name" class="block text-sm font-medium text-gray-700"
            >Item Name</label
          >
          <input
            type="text"
            id="name"
            name="name"
            required
            class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary"
          />
        </div>

        <!-- Description -->
        <div class="mb-6">
          <label
            for="description"
            class="block text-sm font-medium text-gray-700"
            >Description</label
          >
          <textarea
            id="description"
            name="description"
            rows="3"
            class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary"
          ></textarea>
        </div>

        <!-- Price -->
        <div class="mb-6">
          <label for="price" class="block text-sm font-medium text-gray-700"
            >Price (Rs. )</label
          >
          <input
            type="number"
            id="price"
            name="price"
            min="0"
            step="1"
            required
            class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary"
          />
        </div>

        <!-- Category -->
        <div class="mb-6">
          <label for="category" class="block text-sm font-medium text-gray-700"
            >Category</label
          >
          <select
            id="category"
            name="category"
            required
            class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary"
          ></select>
        </div>

        <!-- Image Upload -->
        <div class="mb-6">
          <label class="block text-sm font-medium text-gray-700"
            >Item Image</label
          >
          <div class="mt-1 flex items-center">
            <div class="w-full">
              <input
                type="file"
                id="image"
                name="image"
                accept=".jpg,.jpeg,.png"
                required
                class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-primary file:text-white hover:file:bg-primary/90"
              />
            </div>
          </div>
          <p class="mt-2 text-sm text-gray-500">PNG, JPG, GIF up to 25MB</p>
        </div>

        <!-- Submit Button -->
        <div class="flex justify-end">
          <button
            type="submit"
            class="bg-primary text-white px-6 py-2 rounded-md hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
          >
            Add Item
          </button>
        </div>
      </form>
    </div>
  </main>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // get
    loadCategories();
  });
  // Fetch categories when page loads
  async function loadCategories() {
    try {
      const response = await fetch("/menu/getCategories");
      const categories = await response.json();

      const categorySelect = document.getElementById("category");

      // Keep the "All Categories" option and add fetched categories
      categorySelect.innerHTML = `
            ${categories
              .map(
                (category) => `
                <option value="${category.value}" 
                    ${category.value}>
                    ${category.label}
                </option>
            `
              )
              .join("")}
        `;
    } catch (error) {
      console.error("Error loading categories:", error);
    }
  }
  // Preview image before upload
  document.getElementById("image").addEventListener("change", function (e) {
    const file = e.target.files[0];
    if (file && file.type.startsWith("image/")) {
      const reader = new FileReader();
      reader.onload = function (e) {
        const preview = document.createElement("img");
        preview.src = e.target.result;
        preview.className = "mt-2 w-32 h-32 object-cover rounded-md";

        // Remove existing preview if any
        const existingPreview = document.querySelector(".image-preview");
        if (existingPreview) {
          existingPreview.remove();
        }

        // Add new preview
        preview.classList.add("image-preview");
        document.getElementById("image").parentNode.appendChild(preview);
      };
      reader.readAsDataURL(file);
    }
  });
</script>
